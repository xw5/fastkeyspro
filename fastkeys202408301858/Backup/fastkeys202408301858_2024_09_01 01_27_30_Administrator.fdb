Menu 1|Menu 2
‼
1•必应••Run•https://cn.bing.com/?mkt=zh-cn•1•0••0
1•百度••Run•https://www.baidu.com•1•0••0
1•掘金••Run•https://juejin.cn/•1•0••0
1•Bilibili••Run•https://www.bilibili.com/•1•0••0
1•我的DCloud插件集合••Run•https://ext.dcloud.net.cn/manage•1•0••0
1•FastKeys Forum••Run•http://www.fastkeysautomation.com/forum•1•0••0
1•--------•••••0••0
1•下载••Run•C:\Users\Administrator\Downloads•1•0••0
1•G:\code••Run•G:\code•5•0••0
1•Desktop Example••Run•http://money.cnn.com/¶calc¶notepad•1•0••0
1•Show/Hide Clock••Command•if WinExist("Clock") {¶ Gui, 24:Destroy¶ SetTimer, UC, Off¶}¶else { ¶Gui, 24:+ToolWindow +AlwaysOnTop -sysmenu ;-caption¶Gui, 24:Color, black¶Gui, 24:Font, s16 cwhite¶Gui, 24:Add, Text, W100 H20 +Center vText¶SetTimer, UC, 1000¶Gosub, UC¶h:=A_ScreenWidth-300¶Gui, 24:Show, x%h% y50, Clock¶}¶Return¶UC:¶GuiControl,24:, Text, %A_Hour%:%A_Min%:%A_Sec%¶Return•1•0••0
1•My Phrases•Signature•Send•My FirstName LastName¶Street ¶City, State, Zip¶Email Address¶Phone¶Cell Phone•1•0••0
1•My Phrases•Thank you phrase•Send•Thank you for your mail. I will get back to you as soon as possible.¶¶Kind regards, John•1•0••0
1•My Phrases•Closing phrase•Send•In the case you have any questions, please do not hesitate to contact us.¶¶Best regards, John•1•0••0
1•--------•••••0••0
1•Microsoft Office•Word•Run•winword•1•0••0
1•Microsoft Office•Excel•Run•excel.exe•1•0••0
1•Microsoft Office•Outlook•Run•Outlook.exe•1•0••0
1•Microsoft Office•PowerPoint•Run•Powerpnt.exe•1•0••0
1•System•Control Panel•Run•control•1•0••0
1•System•Devices and Printers•Run•explorer.exe shell:::{A8A91A66-3A7D-4424-8D24-04E180695C7A}•1•0••0
1•System•Task Manager•Run•taskmgr.exe•1•0••0
1•System•System•Run•explorer.exe shell:::{BB06C0E4-D293-4f75-8A90-CB05B6477EEE}•1•0••0
1•System•Device Manager•Run•devmgmt.msc•1•0••0
1•System•Run•Run•cmd•1•0••0
1•Applications•Notepad•Run•notepad.exe•1•0••0
1•Applications•Paint•Run•mspaint•1•0••0
1•Applications•Calculator•Run•Calc.exe•1•0••0
1•Power•Logoff•Run•shutdown.exe /l•1•0••0
1•Power•Shutdown•Run•shutdown.exe /s /t 5•1•0••0
1•Power•Restart•Run•shutdown.exe /r /t 5•1•0••0
1•Power•Lock•Run•rundll32.exe user32.dll,LockWorkStation•1•0••0
→
1•Signature••Send•My FirstName LastName¶Street ¶City, State, Zip¶Email Address¶Phone¶Cell Phone•1•0••0
1•Thank you phrase••Send•Thank you for your mail. I will get back to you as soon as possible.¶¶Kind regards, John•1•0••0
1•Mail response••Send•Dear %Cursor%,¶¶thank you for your message. I will get back to you as soon as possible.¶¶Kind regards,¶John•1•0••
1•Documents••Run•explorer.exe shell:::{450d8fba-ad25-11d0-98a8-0800361b1103}•1•0••0
1•Chrome••Run•C:\Program Files (x86)\Google\Chrome\Application\chrome.exe•1•0••0
∟
Default
‼
1•Pause•Pause•Mute Sound with Notification•Command•Send {Volume_Mute}¶SoundPlay, %A_WinDir%\Media\notify.wav•••0
1•^CapsLock•Ctrl + CapsLock•Change Caps Text Utility•Command•Menu Case, Add¶Menu Case, DeleteAll¶Menu Case, Add, &UPPERCASE, CCase¶Menu Case, Add, &lowercase, CCase¶Menu Case, Add, &Title Case, CCase¶Menu Case, Add, &Sentence case, CCase¶Menu Case, Add¶Menu Case, Add, &Fix Linebreaks, CCase¶Menu Case, Add, &Reverse, CCase¶Menu Case, Add¶Menu Case, Add, &Remove Spaces, CCase¶¶GetText(Txt)¶If NOT ERRORLEVEL¶  Menu Case, Show¶Return¶¶CCase:¶p:=A_ThisMenuItemPos¶If (p=1)¶  StringUpper, Txt, Txt¶Else If (p=2)¶  StringLower, Txt, Txt¶Else If (p=3)¶  StringLower, Txt, Txt, T¶Else If (p=4)¶{¶  StringLower, Txt, Txt¶  Txt := RegExReplace(Txt, "((?:^|[.!?]\s+)[a-z])", "$u1")¶}¶Else If (p=6)¶{¶  Txt := RegExReplace(Txt, "\R", "`r`n")¶}¶Else If (p=7)¶{¶  Temp2 =¶  StringReplace, Txt, Txt, `r`n, % Chr(29), All¶  Loop Parse, Txt¶    Temp2 := A_LoopField . Temp2¶  StringReplace, Txt, Temp2, % Chr(29), `r`n, All¶}¶Else If (p=9)¶{¶  Loop ¶  { ¶  StringReplace, Txt, Txt, %A_Space%%A_Space%, %A_Space%, UseErrorLevel ¶  if ErrorLevel = 0  ¶    break ¶  }¶}¶PutText(Txt)¶Return¶¶GetText(ByRef MyText = "")¶{¶SavedClip := ClipboardAll¶Clipboard =¶Send ^{vk43} ;Ctrl C¶ClipWait 0.5¶If ERRORLEVEL¶{¶  Clipboard := SavedClip¶  MyText =¶  Return¶}¶MyText := Clipboard¶Clipboard := SavedClip¶Return MyText¶}¶¶PutText(MyText)¶{¶SavedClip := ClipboardAll ¶Clipboard =¶Sleep 20¶Clipboard := MyText¶Send ^{vk56} ;Ctrl V¶Sleep 100¶Clipboard := SavedClip¶Return¶}••^CapsLock•0
1•~Escape•Escape•Double-click Esc Close Window/Tab•Command•WinGetClass Class, A¶If (A_ThisHotKey = A_PriorHotkey && A_TimeSincePriorHotkey < 350)¶ If Class in MozillaWindowClass,IEFrame¶  Send ^{vk57} ;Ctrl w¶ Else¶  Send !{F4}•••0
1•!Insert•Alt + Insert•Window Always on Top +•Command•Winset,AlwaysOnTop,,A¶WinGetTitle, Name, A¶If (SubStr(Name, 1, 1) = "+")¶ Name:=Name := SubStr(Name, 3)¶else¶ Name:="+ " . Name ;chr(134)¶WinSetTitle, A, , %Name%•••0
1•!G•Alt + G•Google Search Text•Command•Send, ^{vk43} ;Ctrl C¶Sleep 50¶Run, http://www.google.com/search?q=%clipboard%•••0
1•^3•Ctrl + 3•Search Text in Word Dictionary•Command•SaveClip := ClipboardAll¶Clipboard := ""¶Send ^{vk43} ;Ctrl C¶ClipWait 1¶Word := RegExReplace(Clipboard, "[^\w\s]")¶Clipboard := SaveClip¶SaveClip := ""¶Run, http://dictionary.reference.com/browse/%Word%?s=t•••0
1•!H•Alt + H•Hide Other Windows•Command•SetWinDelay,0¶If WinNotExist,ahk_id %id%¶  WinRestore,A¶WinGet,id,ID,A¶WinGet,style,Style,ahk_id %id%¶If (style & 0x20000)¶{¶  WinGet,winid_,List,,,Program Manager¶  Loop,%winid_% ¶  {¶    StringTrimRight,winid,winid_%A_Index%,0¶    If id=%winid%¶      Continue¶    WinGet,style,Style,ahk_id %winid%¶    If (style & 0x20000)¶    {¶     WinGet,state,MinMax,ahk_id %winid%,¶     If state=-1¶	Continue¶     WinGetClass,class,ahk_id %winid%¶     If class=Shell_TrayWnd¶	Continue¶     IfWinExist,ahk_id %winid%¶	WinMinimize,ahk_id %winid%¶    }¶  }¶}•••0
1•!W•Alt + W•StopWatch Timer•Command•if WinExist("Timer") {¶ Gui, 12:Destroy¶ SetTimer, 12Count, Off¶}¶else {¶12DateTimeStamp=20061203000000¶Gui, 12:  +AlwaysOnTop¶Gui, 12:Font, s14¶Gui, 12:Add, Text,, Start Time:¶Gui, 12:Add, Text, xp+100 h20 yp  v12Beg , 00:00:00¶Gui, 12:Add, Text, xm, Duration:¶Gui, 12:Add, Text, xp+100 h20 yp  v12Time, 00:00:00¶Gui, 12:Add, Text, xm, Stop Time:¶Gui, 12:Add, Text, xp+100 h20 yp  v12End , 00:00:00¶Gui, 12:Font¶Gui, 12:Add, Button, xm-2 y+15 w55 h23 v12StartStop g12StartStop, Start¶Gui, 12:Add, Button, x+2 wp hp v12PauseResume g12PauseResume, Pause¶Gui, 12:Add, Button, x+2 wp hp v12Reset g12Reset, Reset¶Gui, 12:Show, x200 y200, Timer¶}¶return¶¶12StartStop:¶GuiControlGet, 12StartStop¶If ( 12StartStop = "Start" ) ¶{¶ GuiControl, 12:, 12StartStop, Stop¶ 12Beg:=A_Hour . ":" . A_Min . ":" . A_Sec¶ GuiControl, 12:, 12Beg, %12Beg%¶ GuiControl, 12:, 12End, 00:00:00¶ SetTimer, 12Count,990¶}¶Else¶{¶ GuiControl, 12:, 12StartStop, Start¶ 12End:=A_Hour . ":" . A_Min . ":" . A_Sec¶ GuiControl, 12:, 12End, %12End%¶ SetTimer, 12Count, Off¶ GuiControl, 12:, 12PauseResume, Pause¶ 12DateTimeStamp = 20061203000000¶} ¶Return¶ ¶12PauseResume:¶GuiControlGet, 12StartStop¶If ( 12StartStop = "Start" )¶  Return¶GuiControlGet, 12PauseResume¶If ( 12PauseResume = "Pause" ) ¶{¶ GuiControl, 12:, 12PauseResume, Resume¶ SetTimer, 12Count, OFF¶}¶Else¶{¶ GuiControl, 12:, 12PauseResume, Pause¶ SetTimer, 12Count, 990¶} ¶Return¶¶12Reset:¶GuiControl, 12:, 12Time, 00:00:00¶12Beg:=A_Hour . ":" . A_Min . ":" . A_Sec¶GuiControl, 12:, 12Beg, %12Beg%¶12DateTimeStamp = 20061203000000¶GuiControl, 12:, 12End, 00:00:00¶Return¶¶12Count:¶12DateTimeStamp += 1, Seconds¶FormatTime, nTime, %12DateTimeStamp%, HH:mm:ss¶GuiControlGet, 12Time¶If ( 12Time <> nTime )            ¶  GuiControl, 12:, 12Time, %nTime% ¶Return¶¶12GuiClose:¶Gui, 12:Destroy¶SetTimer, 12Count, Off¶return••!VK57•0
1•!T•Alt + T•Make Window Transparent•Command•togg34:=!togg34¶if togg34¶ WinSet, Transparent, 200 , A   ;transparency¶else¶ WinSet, Transparent, OFF , A•••0
1•^F4•Ctrl + F4•Window Screen to Paint•Command•clipsave=%clipboard%¶Send, !{PRINTSCREEN}¶ClipWait 1¶Run, mspaint.exe¶WinWaitActive ahk_class MSPaintApp¶Send, ^{vk56} ;Ctrl V¶ClipWait 1¶clipboard=%clipsave%••^F4•0
1•!Q•Alt + Q•Recent Files/Folders Menu•Command•if A_OSVersion in WIN_98,WIN_ME,WIN_XP ¶{¶  EnvGet, Path, UserProfile¶  fd = %Path%\Recent¶}¶else¶  fd=%A_AppData%\Microsoft\Windows\Recent¶Menu, RM, UseErrorLevel¶Menu, RM, DeleteAll¶Menu, RM, Delete¶FileList =¶Loop, %fd%\*.*, 0, 0¶    FileList = %FileList%%A_LoopFileTimeModified%`t%A_LoopFileFullPath%`n¶Sort, FileList, R¶Loop, parse, FileList, `n¶{¶   if (A_index=16)¶      break¶   if A_LoopField =¶      continue¶   StringSplit, FileItem, A_LoopField, %A_Tab%¶   OutTarget= %FileItem2%¶   Splitpath, OutTarget,name,,Ext¶   FileGetShortcut, %OutTarget%, FileTo¶   FileGetAttrib, Attributes, %FileTo%¶   SplitPath, FileTo,name,,Ext¶   If InStr(Attributes, "D" )¶   {¶      IconFile:="C:\Windows\system32\imageres.dll"¶      icc:=4¶   }¶   else¶   {¶      IconFile:=AssocQueryApp(Ext)¶      icc:=2¶   }¶   Menu, RM, Add, %name%, LabelR¶   Menu, RM, Icon, %name%, %IconFile%, %icc%, 16¶   if errorlevel¶      Menu, RM, Icon, %name%, %IconFile%, 1, 16¶   if errorlevel¶      Menu, RM, Icon, %name%, C:\Windows\system32\imageres.dll, 12, 16¶}¶Menu, RM, show¶Return¶¶LabelR:¶run, %fd%\%A_ThisMenuItem%.lnk,,useerrorlevel¶return¶¶AssocQueryApp(ext) {¶	RegRead, type, HKCU, Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.%Ext%, Application¶	If !ErrorLevel {¶		RegRead, act, HKCU, Software\Classes\Applications\%type%\shell¶		If ErrorLevel¶			act = open¶		RegRead, cmd, HKCU, Software\Classes\Applications\%type%\shell\%act%\command¶    }¶	Else {¶		RegRead, type, HKCR, .%Ext%¶		RegRead, act , HKCR, %type%\shell¶		If ErrorLevel¶			act = open¶        RegRead, cmd , HKCR, %type%\shell\%act%\command¶        EXEPosition := InStr(cmd,".exe",false,0,1)¶        exepath := Trim(SubStr(cmd,1,EXEPosition+3),"""")¶    }¶    Return, exepath¶}•••0
1•!4•Alt + 4•Change Default Audio Device•Command•toggle32:=!toggle32¶Run, mmsys.cpl¶WinWaitActive,Sound¶if toggle32¶ ControlSend,SysListView321,{Down}¶else¶ ControlSend,SysListView321,{Down 3}¶Sleep, 50¶ControlClick,Button2¶ControlClick,OK•••0
1•!V•Alt + V•Paste Without Formatting•Command•clipboard=%clipboard%¶sleep 100¶Send, ^{vk56} ;Ctrl V•••0
∟
Phrase files|common|code|react|vue
‼
0••%dir%\Auto Correct English.fkp•1•0•0•0•0•1•0••Auto Correct English•Phrase File•0•0•0
0••%dir%\My Abbreviations.fkp•1•0•0•0•0•1•0••My Abbreviations•Phrase File•0•0•0
0••%dir%\Common Abbreviations.fkp•1•0•0•0•0•1•0••Common Abbreviations•Phrase File•0•0•0
0••%dir%\Html Coding Abbreviations.fkp•1•0•0•0•0•1•0•Notepad++ •Html Coding Abbreviations•Phrase File•0•0•0
0••%dir%\Fractions.fkp•1•0•0•0•0•1•0••Fractions•Phrase File•0•0•0
0••%dir%\Medical Abbreviations.fkp•1•0•0•0•0•1•0••Medical Abbreviations•Phrase File•0•0•0
0••%dir%\Auto Correct German.fkp•1•0•0•0•0•1•0••Auto Correct German•Phrase File•0•0•0
0••%dir%\Auto Correct French.fkp•1•0•0•0•0•1•0••Auto Correct French•Phrase File•0•0•0
0••%dir%\Auto Correct Spanish.fkp•1•0•0•0•0•1•0••Auto Correct Spanish•Phrase File•0•0•0
0••%dir%\Auto Correct Portuguese.fkp•1•0•0•0•0•1•0••Auto Correct Portuguese•Phrase File•0•0•0
0••%dir%\Auto Correct Italian.fkp•1•0•0•0•0•1•0••Auto Correct Italian•Phrase File•0•0•0
0••%dir%\Auto Correct Dutch.fkp•1•0•0•0•0•1•0••Auto Correct Dutch•Phrase File•0•0•0
0••%dir%\Unicode Languages Demo.fkp•1•0•0•0•0•1•0••Unicode Languages Demo•Phrase File•0•0•0
→
1•md•h1::¶*h1*¶;h2::¶**h2**¶;h3::¶***h3***¶;加粗::¶**加粗**¶;斜体::¶*斜体*¶;粗斜体::¶***粗斜体***¶;删除线::¶~~粗斜体~~¶;无序列表::¶* 无序列表0¶* 无序列表1¶;有序列表::¶1. 有序列表0¶2. 有序列表1¶;图片::¶![这是图片](https://placehold.jp/999999/ff4400/200x200.png?text=EXAMPLE "图片标题")¶;链接::¶[Markdown语法](https://markdown.com.cn)¶;code::¶``` javascript¶// 这里是代码内容¶¶```¶;表格::¶| Column 1 | Column 2  |	Column 3 |¶|:--------| :---------:|--------:|¶| 文本居左:_left_ | 文本居中:__center__ |文本居右:right|¶;引用::¶> 我是引用内容¶>> 我是嵌套引用¶;分隔线::¶---¶;任务列表::¶- [ ] 待完成任务¶     - [ ] 待完成任务¶- [x] 已完成任务¶;h4::¶****h4****¶;h5::¶*****h5*****¶;h6::¶******h6******•0•0•0•0•0•1•0••markdown模板•Send•0•0•1
→
1•rem•js REM适配::¶(function(doc, win) {¶  var docEl = doc.documentElement,¶  resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',¶  getFontSize = function() {¶    var fontSize = 0;¶    if (document.documentElement.currentStyle) {¶      fontSize = document.documentElement.currentStyle.fontSize;¶    }¶    if (window.getComputedStyle) {¶      fontSize = window.getComputedStyle(document.documentElement, false).fontSize;¶    }¶    return parseFloat(fontSize);¶  },¶  recalc = function() {¶    var clentWidth = docEl.clientWidth;¶    var container = doc.getElementById('app');¶    // 最大显示540宽¶    if (clentWidth >= 540) {¶      docEl.style.fontSize = '50px';¶      container.style.width = '540px';¶    } else {¶      var remFontSize = clentWidth / 10.8;¶      docEl.style.fontSize = remFontSize + 'px';¶      container.style.width = 'auto';¶      // 修正系统字体调整造成的布局问题¶      var realitySize = getFontSize();¶      if (realitySize && parseInt(remFontSize) !== parseInt(realitySize)) {¶        remFontSize = remFontSize * remFontSize / realitySize;¶        docEl.style.fontSize = remFontSize + 'px';¶      }¶    }¶  };¶  if (!doc.addEventListener) return;¶  win.addEventListener(resizeEvt, recalc, false);¶  doc.addEventListener('DOMContentLoaded', recalc, false);¶})(document, window);¶;css REM适配::¶html{¶  font-size: 9.259259259259259vw;¶  background-color: #040404;¶}¶¶@media only screen and (max-width: 320px) {¶  html{¶	font-size: 29px;¶  }¶  body{¶	width:320px;¶	margin:0 auto;¶  }¶}¶¶@media only screen and (min-width: 540px) {¶  html{¶	font-size: 50px;¶  }¶  body{¶	width:540px;¶	margin:0 auto;¶  }¶}•0•0•0•0•0•1•0••rem适配•Send•0•0•1
1•fn•函数表达式箭头::¶const test = () => {¶	%Cursor%¶}¶;函数表达式::¶const test = function() {¶	%Cursor%¶}¶;函数申明::¶function test() {¶	%Cursor%¶}¶;class类::¶class Test {¶    constructor() {¶        super()¶    }¶¶    fn() {¶¶    }¶}•0•0•0•0•0•1•0••js函数定义•Send•0•0•1
1•try•try {¶		¶} catch (err){¶	console.log('----  ----', err);¶}•0•0•0•0•0•1•0••错误捕捉•Send•0•0•1
1•ls•class LocalStorage {¶  defaultExpired = 0; // 默认过期天数¶  ¶  constructor(options) {¶    if (options) {¶      if (options.defaultExpired) {¶        this.defaultExpired = options.defaultExpired¶      }¶    }¶  }¶¶  /**¶   * 设置本地存储¶   * @param key 本地存储key¶   * @param value 本地存储值¶   * @param expiredSeconds 过期秒数¶   */¶  setItem(key, value, expiredSeconds) {¶    const now = Date.now();¶    let expired = 0;¶    // 有设置默认过期时间才处理过期时间¶    if (this.defaultExpired) {¶      expired = now + 1000 * 60 * 60 * 24 * this.defaultExpired; // 默认过期时间¶    }¶¶    // 这里我们限定了 expired 和 maxAge 都是 number 类型，¶    if (expiredSeconds) {¶      expired = now + expiredSeconds * 1000;¶    }¶¶    localStorage.setItem(¶      key,¶      expired ? JSON.stringify({¶        value,¶        expired: expired // 存储的过期时间¶      }) : value¶    );¶  }¶¶  getItem(key) {¶    let result = null;¶    // 防错¶    try {¶      result = localStorage.getItem(key);¶    }¶    catch(err){}¶    if (!result) {¶      // 若key本就不存在，直接返回null¶      return null;¶    }¶    let value, expired;¶    // 支持获取未设置过期时间的本地存储¶    try {¶      let resultObj = JSON.parse(result);¶      if (resultObj && resultObj.value && resultObj.expired) {¶        value = resultObj.value;¶        expired = resultObj.expired;¶      }¶    }¶    catch(err){}¶    if (expired) {¶      if (Date.now() <= expired) {¶        // 还没过期，返回存储的值¶        return value;¶      } else {¶        // 已过期，删除该key，然后返回null¶        this.removeItem(key);¶        return null;¶      }¶    }¶    return result;¶  }¶¶  // 删除key¶  removeItem(key) {¶    localStorage.removeItem(key);¶  }¶¶  // 清除所有过期的key¶  clearAllExpired() {¶    let num = 0;¶¶    // 判断 key 是否过期，然后删除¶    const delExpiredKey = (key, value) => {¶      if (value) {¶        let expired = -1;¶        try {¶          const valueObj = JSON.parse(value);¶          if (valueObj && valueObj.expired) {¶            expired = valueObj.expired;¶          }¶        }¶        catch(err){¶          ¶        }¶        // expired为-1要么是没有设置过期的，要么是parse出错的¶        if (expired === -1) {¶          return 0;¶        }¶        if (Date.now() > expired) {¶          // 已过期¶          localStorage.removeItem(key);¶          return 1;¶        }¶      } else {¶        // 若 value 无值，则直接删除¶        localStorage.removeItem(key);¶        return 1;¶      }¶      return 0;¶    };¶¶    const { length } = window.localStorage;¶¶    for (let i = 0; i < length; i++) {¶      const key = window.localStorage.key(i);¶¶      if (key) {¶        const value = window.localStorage.getItem(key);¶        num += delExpiredKey(key, value);¶      }¶    }¶    return num;¶  }¶}•0•0•0•0•0•1•0••本地存储•Send•0•0•1
1•jssafe•高精度加法::¶/**¶ * @description 加法精确计算，避免数据相加小数点后产生多位数和计算精度损失¶ * @param { Number } num1 加数1¶ * @param { Number } num2 加数2¶ * @return { Number } 相加结果¶ */¶function numAdd(num1, num2) {¶  var baseNum = 0,¶      baseNum1 = 0,¶      baseNum2 = 0;¶  try {¶    baseNum1 = num1.toString().split(".")[1].length;¶  } catch (e) {¶    baseNum1 = 0;¶  }¶  try {¶    baseNum2 = num2.toString().split(".")[1].length;¶  } catch (e) {¶    baseNum2 = 0;¶  }¶  baseNum = Math.pow(10, Math.max(baseNum1, baseNum2));¶  return (num1 * baseNum + num2 * baseNum) / baseNum;¶}¶;高精度减法::¶/**¶ * @description 减法精确计算，避免数据相减小数点后产生多位数和计算精度损失¶ * @param { Number } num1 被减数¶ * @param { Number } num2 减数2¶ * @return { String } 相减结果¶ */¶function numSub(num1, num2) {¶  var baseNum = 0,¶      baseNum1 = 0,¶      baseNum2 = 0;¶  var precision = 0; // 精度¶  try {¶    baseNum1 = num1.toString().split(".")[1].length;¶  } catch (e) {¶    baseNum1 = 0;¶  }¶  try {¶    baseNum2 = num2.toString().split(".")[1].length;¶  } catch (e) {¶    baseNum2 = 0;¶  }¶  baseNum = Math.pow(10, Math.max(baseNum1, baseNum2));¶  precision = baseNum1 >= baseNum2 ? baseNum1 : baseNum2;¶  return ((num1 * baseNum - num2 * baseNum) / baseNum).toFixed(precision);¶}¶;高精度乘法::¶/**¶ * @description 乘法精确计算，避免数据相乘小数点后产生多位数和计算精度损失¶ * @param { Number } num1 被乘数¶ * @param { Number } num2 乘数¶ * @return { Number } 相乘结果¶ */¶function numMulti(num1, num2) {¶  var baseNum = 0;¶  try {¶    baseNum += num1.toString().split(".")[1].length;¶  } catch (e) {}¶  try {¶    baseNum += num2.toString().split(".")[1].length;¶  } catch (e) {}¶  return Number(num1.toString().replace(".", "")) * Number(num2.toString().replace(".", "")) / Math.pow(10, baseNum);¶}¶;高精度除法::¶/**¶ * @description 除法精确计算，避免数据相除小数点后产生多位数和计算精度损失¶ * @param { Number } num1 被除数¶ * @param { Number } num2 除数2¶ * @return { Number } 相除结果¶ */¶function numDiv(num1, num2) {¶  var t1 = 0,¶      t2 = 0,¶      r1 = 0,¶      r2 = 0;¶  try {¶    t1 = num1.toString().split(".")[1].length;¶  } catch (e) {}¶  try {¶    t2 = num2.toString().split(".")[1].length;¶  } catch (e) {}¶  r1 = Number(num1.toString().replace(".", ""));¶  r2 = Number(num2.toString().replace(".", ""));¶  return r1 / r2 * Math.pow(10, t2 - t1);¶}•0•0•0•0•0•1•0••高精度计算•Send•0•0•1
1•load•script src动态加载js::¶// 动态加载脚本¶const loadScript = (src, callback) => {¶  var script = document.createElement('script');¶  if(typeof callback == 'function'){¶    script.onload = script.onreadystatechange = function(){¶      if(!this.readyState ¶        || this.readyState == 'loaded'¶        || this.readyState == 'complete'){¶          callback();¶          script.onload = script.onreadystatechange = null;¶      }¶    }¶  }¶  script.src = src;¶  var head = document.getElementsByTagName('head')[0];¶  head.appendChild(script);¶}¶;行内方式动态加载script::¶// 行内方式动态加载js代码¶const loadJSText = (jsText) => {¶  var script = document.createElement('script');¶  script.type = 'text/javascript';¶  try {¶      // Firefox,Safari,Chrome,Opera支持¶      script.appendChild(document.createTextNode(jsText));¶  } catch(ex){¶      // IE早期的浏览器，需要使用script的text属性来指定js代码¶      script.text = jsText;¶  }¶  document.body.appendChild(script);¶}¶;link动态加载css::¶// 动态加载外部CSS文件¶const loadCSS = (url) => {¶  var link = document.createElement('link');¶  link.rel = 'stylesheet';¶  link.type = 'text/css';¶  link.url = url;¶  document.getElementsByTagName('head')[0].appendChild(link);¶}¶;行间的形式动态加载css::¶// 使用<style>标签包含嵌入式CSS¶const loadCSSText = (cssText) => {¶  var style = document.createElement('style');¶  style.type = 'text/css';¶  try{¶      // Firefox,Safari,Chrome,Opera支持¶      style.appendChild(document.createTextNode(cssText));¶  } catch(ex){¶      // IE早期浏览器，需要使用style元素的styleSheet属性的cssText属性¶      style.styleSheet.cssText = cssText;¶  }¶}•0•0•0•0•0•1•0••动态加载js css•Send•0•0•1
1•lg•console.%SELECT_logfn▬▬3▬log↓info↓error↓dir↓table▬▬▬0▬▬1%('---- %INPUT_logtag▬▬test▬0▬0▬1▬▬1%----:',  %INPUT_logcontent▬▬test▬0▬0▬1▬▬1%)•0•0•0•0•0•1•0••js日志打印•Send•0•0•1
1•axios•import axios from "axios";¶const CancelToken = axios.CancelToken;¶const cancelRequest = {};  // 用于存储需要取消的请求¶¶// axios实例化¶const instance = axios.create({¶  baseURL: import.meta.env.VITE_SERVER_BASE_URL, // vite独有根据不同环境切换不同的服务api地址¶  timeout: 5000,¶  withCredentials: true,¶  headers: {¶    'Content-Type': 'application/json;charset=utf-8'¶  }¶});¶¶// 添加请求拦截器¶instance.interceptors.request.use(function (config) {¶  // 解决get请求不会带content-type的问题¶  if (config.method === 'get') {¶    config.data = {unused: 0};¶  }¶  return config;¶}, function (error) {¶  // 对请求错误做些什么¶  return Promise.reject(error);¶});¶¶// 添加响应拦截器¶instance.interceptors.response.use(function (response) {¶  // 2xx 范围内的状态码都会触发该函数。¶  console.log('---- instance.interceptors.response ----', response);¶  // 精简返回结构¶  const { data, config } = response¶  // 例：如果检测到未登录，且这些接口是需要登录的¶  // if (data.code == UN_LOGIN && config.isLogin) {¶  //   未登录要做操作，一般是去登录¶  //   return data;¶  // }¶  if (cancelRequest[config.url]) {¶    cancelRequest[config.url] = null;¶  }¶  return data;¶}, function (error) {¶  if (cancelRequest[error.config.url]) {¶    cancelRequest[error.config.url] = null;¶  }¶  return Promise.reject(error);¶});¶¶/**¶ * get请求¶ * @param { String } url 请求地址¶ * @param { Object } params 请求参数¶ * @returns ¶ */¶const get = (url, params, config) => {¶  if (cancelRequest[url]) {¶    cancelRequest[url]();¶    cancelRequest[url] = null;¶  }¶  return instance.get(url, {¶    params,¶    ...config,¶    cancelToken: new CancelToken(function executor(c) {¶      // executor 函数接收一个 cancel 函数作为参数¶      cancelRequest[url] = c;¶    })¶  })¶}¶¶/**¶ * post请求¶ * @param { String } url 请求地址¶ * @param { Object } params 请求参数¶ * @returns ¶ */¶ const post = (url, data, config) => {¶  if (cancelRequest[url]) {¶    cancelRequest[url]();¶    cancelRequest[url] = null;¶  }¶  return instance.post(url, data, {¶    ...config,¶    cancelToken: new CancelToken(function executor(c) {¶      // executor 函数接收一个 cancel 函数作为参数¶      cancelRequest[url] = c;¶    })¶  })¶}¶¶export default {¶  get,¶  post¶}•0•0•0•0•0•1•0••js axios基础封装•Send•0•0•1
1•ajax•XMLHttpRequest::¶function transdata(data) {¶  //在转换之前先给data添加属性t 值为时间戳¶  data.t = new Date().getTime();¶  //把{'userName': 'ylf','userPwd': '123456'} 形式转换成 userName=ylf&userPwd=123456形式¶  var arr = [];¶  for (var key in data) {¶    //使用for in遍历数组¶    //将属性值：属性名形式转换为属性值=属性名形式  拼接到数组后面¶    arr.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));¶  }¶  //使用join方法将数组转换为字符串形式 使用&作为分隔符¶  return arr.join('&');¶}¶¶function ajax(option) {¶  //定义异步对象和计时器¶  var xhr, timer;¶  //0 .使用自定义的transdata函数将传递过来的参数由{'userName': 'ylf','userPwd': '123456'} 形式转换成 userName=ylf&userPwd=123456形式¶  var data = transdata(option.data);¶  //1. 创建一个异步对象 兼容低版本ie浏览器¶  if (window.XMLHttpRequest) {¶    xhr = new XMLHttpRequest();¶  } else {¶    xhr = new ActiveXObject("Microsoft.XMLHTTP");¶  }¶  //2. 设置请求方式和请求地址 ¶  if (option.type.toLowerCase() === "get") {¶    //3. get设置请求方式 将需要传递的参数拼接到url后面 方便php读取¶    xhr.open(option.type, option.url + "?" + data, true);¶    //3. get发送请求¶    xhr.send();¶  } else {¶    //3. 给post请求传参时open内容正常写 使用send方法传递参数¶    xhr.open(option.type, option.url, true);¶    xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");¶    //3. post发送请求¶    xhr.send(data);¶  }¶  //4. 监听异步对象状态变化¶  xhr.onreadystatechange = function () {¶    if (xhr.readyState === 4) {¶      //请求完成之后停止计时器¶      clearInterval(timer);¶      //http状态码在200到300之间或者304时 说明网页正常响应¶      if (xhr.status >= 200 && xhr.status <= 300 || xhr.status === 304) {¶        //处理返回结果¶        option.success(xhr);¶      } else {¶        //处理返回结果¶        option.error(xhr);¶      }¶    }¶  };¶  //为了防止请求时间过长 我们创建一个计时器¶  //判断是否传递了timeout参数¶  if (option.timout) {¶    timer = setInterval(function () {¶      console.log("请求超时");¶      //计时器到达时间之后我们停止请求 并打印请求超时¶      xhr.abort();¶      clearInterval(timer);¶    }, option.timeout);¶  };¶}¶¶// 使用示例¶ajax({¶  type: "post",¶  url: "04-ajax.php",¶  data: {¶    "userName": "ylf",¶    "userPwd": "123123"¶  },¶  timeout: 3000,¶  success: function (xhr) {¶    alert(xhr.responseText);¶  },¶  error: function (xhr) {¶    alert("请求失败");¶  }¶})¶;fetch::¶const res = await fetch(url, {¶  method: 'POST',¶  mode: 'cors',¶  // 跨域是否携带cookie¶  credentials: 'include',¶  headers: {¶    'Content-Type': 'application/x-www-form-urlencoded'¶  },¶  body: qs.stringify({key: 'value'})¶}).then(res => res.json());•0•0•0•0•0•1•0••ajax封装•Send•0•0•1
1•for•for::¶for(let i=0; i<list.length; i++) {¶	%Cursor%¶}¶;forEach::¶array.forEach((item, index) => console.log('---- array ----:', item, index));¶;forin::¶for(key in obj) {¶	%Cursor%¶}¶;forof::¶for(item of obj) {¶	%Cursor%¶}¶;map::¶array.map((item, index) => console.log('---- array ----:', item, index));•0•0•0•0•0•1•0••js 循环遍历•Send•0•0•1
1•clone•递归深拷贝::¶/**¶ * 深拷贝¶ * @param obj ¶ * @returns 新拷贝的对象¶ */¶function deepClone(obj) {¶  // Hash表 记录所有的对象引用关系¶  let map = new WeakMap();¶  function dp(obj) {¶    let result = null;¶    let keys = null,¶      key = null,¶      temp = null,¶      existObj = null;¶¶    existObj = map.get(obj);¶    // 如果这个对象已被记录则直接返回¶    if (existObj) {¶      return existObj;¶    }¶    keys = Object.keys(obj);¶    result = {};¶    // 记录当前对象¶    map.set(obj, result);¶    for (let i = 0; i < keys.length; i++) {¶      key = keys[i];¶      temp = obj[key];¶      // 如果字段的值也是一个对象则递归复制¶      if (temp && typeof temp === 'object') {¶        result[key] = dp(temp);¶      } else {¶        // 否则直接赋值给新对象¶        result[key] = temp;¶      }¶    }¶    return result;¶  }¶  return dp(obj);¶}¶;stringify+parse深拷贝::¶const deepClone = () => {¶	const temp = null;¶	try{¶		temp = JSON.parse(JSON.stringify(obj));¶	}catch(e){}¶	return temp;¶}¶;对象浅拷贝::¶const mergeObj = Object.assign({}, mergeObj);¶;数组浅拷贝::¶const copyArray= copyArray.slice(0);¶const copyArray= copyArray.concat();¶const copyArray= [...copyArray];•0•0•0•0•0•1•0••js 对象克隆•Send•0•0•1
1•media•音乐播放暂停::¶// 音乐播放和暂停¶const toggleMusic = () => {¶  const musicObj = document.querySelector('#musicSource');¶  if (isPlayingMusic.value) {¶    isPlayingMusic.value = false;¶    musicObj.pause();¶  } else {¶    isPlayingMusic.value = true;¶    musicObj.play();¶  }¶}¶¶// 事件兼容¶const eventType = "ontouchstart" in window ? 'touchstart' : 'click';¶¶// 实现音乐播放¶const musicplay = () => {¶  toggleMusic();¶    document.removeEventListener(eventType, musicplay);¶}¶¶document.addEventListener(eventType, musicplay);¶;audio标签::¶<audio loop controls>¶    <source src="./assets/music.mp3" type="audio/mpeg">¶</audio>¶;video标签::¶<video width="320" height="240" controls autoplay loop poster="我是封面图，默认是视频第一帧" >¶    <source src="movie.mp4" type="video/mp4">¶    <source src="movie.ogg" type="video/ogg">¶    您的浏览器不支持 video 标签。¶</video>•0•0•0•0•0•1•0••js 音乐播放暂停•Send•0•0•1
1•meta•viewport::¶<meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />¶;notelphone::¶<meta name="format-detection" content="telephone=no" />¶;noemail::¶<meta content="email=no" name="format-detection" />¶;https::¶<meta http-equiv ="Content-Security-Policy" content="upgrade-insecure-requests">•0•0•0•0•0•1•0••html常用meta设置•Send•0•0•1
→
1•rinit•函数式 ::import { useState } from 'react'¶import './Index.css'¶¶function Index({initialValue}) {¶  const [count, setCount] = useState(initialValue)¶¶  return (¶    <div className="warp">¶      <div>app:{count}</div>¶      <button onClick={() => setCount(count + 1)}>setCount</button>¶    </div>¶  )¶}¶¶export default Index¶; 类组件 ::import React from 'react';¶import './Index.css';¶¶class Index extends React.Component {¶  constructor(props) {¶    super(props);¶    this.state = {¶      title: 'Hello, world!',¶      date: new Date()¶    };¶    ¶  }¶¶  componentDidMount() {¶    this.timerID = setInterval(¶      () => this.tick(),¶      1000¶    );¶  }¶¶  componentWillUnmount() {¶    clearInterval(this.timerID);¶  }¶¶  tick() {¶    this.setState({¶      date: new Date()¶    });¶  }¶¶  toggleTitle= () => {¶    this.setState({¶      title: 'Hello React!'¶    });¶  }¶¶  render() {¶    return (¶      <div>¶        <h1 onClick={this.toggleTitle}>{title}</h1>¶        <h2>It is {this.props.date.toLocaleTimeString()}.</h2>¶      </div>¶    );¶  }¶}¶¶export default Index;•0•0•0•0•0•1•0••react组件模板•Send•0•0•1
1•rhooks•useState::¶const [number, setNumber] = useState(0);¶const [date, setDate] = useState(() => {¶  const dateObj = new Date();¶  console.log('-- useState init --');¶  return {¶    Y: dateObj.getFullYear(),¶    M: dateObj.getMonth() + 1,¶    D: dateObj.getDate(),¶    h: dateObj.getHours(),¶    m: dateObj.getMinutes(),¶    s: dateObj.getSeconds(),¶  }¶});¶;useEffect::¶useEffect(() => {¶    const timer = setInterval(()=>console.log(666),1000)¶    return () => {¶        clearInterval(timer);¶    };¶}, [state]);¶;useRef::¶// 存储值¶const cur = React.useRef(initState);¶console.log(cur.current);¶// 获取节点或者组件实例¶// <Input ref={inputEl} type="text" /> ¶// inputEl.current获取节点对象¶const inputEl = useRef(null);¶;useMemo::¶const contextValue = useMemo(() => {¶	return {¶		newVal: state * 100 + '%'¶	}¶}, [state]);¶;useCallback::¶const memoizedCallback = useCallback(() => {¶    doSomething(a, b);¶}, [a, b]);¶;useContent::¶// 使用示例 https://zh-hans.reactjs.org/docs/hooks-reference.html#usecontext¶// const themes = {¶//  light: {¶//    foreground: "#000000",¶//    background: "#eeeeee"¶//  },¶//  dark: {¶//    foreground: "#ffffff",¶//    background: "#222222"¶//  }¶//};¶// const MyContext= React.createContext(themes.light);¶// 包裹上级注入 <MyContext.Provider value={themes.dark}></MyContext.Provider>¶// {theme.foreground}¶const theme = useContext(MyContext);¶;useReducer::¶const initialState = {count: 0};¶function reducer(state, action) {¶  switch (action.type) {¶    case 'increment':¶      return {count: state.count + 1};¶    case 'decrement':¶      return {count: state.count - 1};¶    default:¶      throw new Error();¶  }¶}¶const [state, dispatch] = useReducer(reducer, initialState);•0•0•0•0•0•1•0••react常用hooks•Send•0•0•1
1•rif•&&运算::¶{ isShow && (¶    <div className='example'>¶      <h2>Hello HeHe!</h2>¶    </div>¶  )¶}¶;?三目运算::¶{ isLoggedIn¶  ? <LogoutButton />¶  : <LoginButton />¶}•0•0•0•0•0•1•0••react条件渲染•Send•0•0•1
1•rmap•{list.map((item, index) => {¶  return (¶    <div className='example-item' key={index}>¶      <p>{item.title}</p>¶    </div>¶  )¶})}•0•0•0•0•0•1•0••react map渲染•Send•0•0•1
→
1•vlife•vue3生命周期 :: ¶%SELECT_life3▬▬2▬onBeforeMount↓onMounted↓onBeforeUpdate↓onUpdated↓onBeforeUnmount↓onUnmounted↓onActivated↓onDeactivated↓onErrorCaptured▬▬▬0▬▬1%(() => {¶¶})¶;vue2生命周期 :: ¶%SELECT_life2▬▬3▬beforeCreate↓created↓beforeMount↓mounted↓beforeUpdate↓updated↓beforeDestroy↓destroyed↓activated↓deactivated▬▬▬0▬▬1%() {¶    ¶}•0•0•0•0•0•1•0••vue生命周期•Send•0•0•1
1•vinit•vue3模板setup语法糖::¶<template>¶	<div>{{ msg }}</div>¶</template>¶¶<script setup>¶	import { ref } from 'vue';¶	¶	const msg = ref('Hello World!');¶	¶</script>¶¶<style lang="scss">¶	       ¶</style>¶;vue3模板setup()::<template>¶	<div>{{ msg }}</div>¶</template>¶¶<script>¶	import { ref, onMounted } from 'vue';¶	¶	export default {¶		props: {¶			title: String¶		},¶		components: {},¶		setup(props, context) {¶			const msg = ref('Hello World!');¶			¶			// 获取组件属性¶			console.log('---- props.title----:',  props.title)¶			// 插槽（非响应式的对象，等价于 $slots）¶			console.log('---- context.slots----:',  context.slots)¶			// 触发事件（函数，等价于 $emit）¶			console.log('---- context.emit----:',  context.emit)¶			// 暴露公共属性（函数）¶			console.log('---- context.expose----:',  context.expose)¶			¶			onMounted(() => {¶¶			})¶¶			return {¶				msg¶			}¶		}¶	}¶	¶</script>¶¶<style lang="scss">¶	       ¶</style>¶;vue2模板::<template>¶	<div>{{msg}}</div>¶</template>¶¶<script>¶	export default {¶		data() {¶			return {¶				msg: 'Hello World!'¶			}¶		},¶		methods: {¶			¶		}¶	}¶</script>¶¶<style lang="scss">¶¶</style>•0•0•0•0•0•1•0••vue组件模板•Send•0•0•1
1•vhooks•ref:: ¶const count = ref(0);¶;reactive::¶const obj = reactive({ count: 0 })¶;computed::¶const plusOne = computed(() => count.value + 1);¶const firstName = ref('John');¶const lastName = ref('Doe');¶const fullName = computed({¶  // getter¶  get() {¶    return firstName.value + ' ' + lastName.value;¶  },¶  // setter¶  set(newValue) {¶    [firstName.value, lastName.value] = newValue.split(' ');¶  }¶});¶;vue3watch::¶const x = ref(0);¶const unwatch = watch(x, (newX, oldX) => {¶  console.log(`x is ${newX}:${oldX}`)¶}, {¶  immediate: true, // 即时回调¶  once: true, //  一次性监听¶  flush: 'post', // ¶});¶unwatch(); // 停用侦听器，对于同步创建的侦听器不需要手动清除，异步回调中创建的需要手动停止¶const state = reactive({ count: 0 })¶watch(() => state.count, (count, prevCount) => {¶    console.log('---- count ----:watch', count.value);¶  }¶)¶const fooRef = ref(0);¶const barRef = ref(1);¶watch([fooRef, barRef], ([foo, bar], [prevFoo, prevBar]) => {¶  console.log('---- fooRef barRef ----:watch', foo, bar);¶}, {¶	deep: true, // 深度监听¶	immediate: true, // 侦听器创建时立即触发回调¶	once: true // 回调函数只会触发一次¶})¶;vue2watch::¶// 普通写法¶count(newVal, oldVal) {¶  console.log('---- watch ----:count', newVal, oldVal);¶}¶¶//  配置写法¶count: {¶  hander(newVal, oldVal) {¶    console.log('---- watch ----:count', newVal, oldVal);¶  },¶  deep: true,¶  immediate: true¶}¶;defineEmits::¶// 基础用法¶const emit = defineEmits(['click', 'submit']);¶// 高级用法¶const emit = defineEmits({¶  // 没有校验¶  click: null,¶¶  // 校验 submit 事件¶  submit: ({ email, password }) => {¶    if (email && password) {¶      return true;¶    } else {¶      console.warn('Invalid submit event payload!')¶      return false;¶    }¶  }¶})¶;defineExpose::¶// 组件向外暴露方法+属性¶defineExpose({¶  show,¶  hide¶});¶;watchEffect::¶const stopEffect = watchEffect(() => {¶	console.log(count.value);¶}, {¶  // post:使侦听器延迟到组件渲染之后再执行 sync:响应式依赖发生改变时立即触发侦听器 pre:默认值侦听器将在组件渲染之前执行¶  flush: 'pre', ¶  onTrack(e) {¶    console.log('---- watchEffect onTrack ----:', e)¶  },¶  onTrigger(e) {¶    console.log('---- watchEffect onTrigger ----:', e)¶  }¶});¶// 停止侦听器¶stopEffect();¶;readonly::¶const original = reactive({ count: 0 });¶const copy = readonly(original);¶;isRef::¶// 检查某个值是否为 ref¶const isref = isRef(test);¶;unref::¶// 参数是 ref，则返回内部值，否则返回参数本身 val = isRef(val) ? val.value : val 计算的一个语法糖¶const refval = unRef(test);¶;toRef::¶const state = reactive({¶  foo: 1,¶  bar: 2¶});¶¶// 双向 ref，会与源属性同步¶const fooRef = toRef(state, 'foo');¶¶// 更改该 ref 会更新源属性¶fooRef.value++;¶console.log(state.foo); // 2¶¶// 更改源属性也会更新该 ref¶state.foo++;¶console.log(fooRef.value); // 3¶;toRefs::¶const state = reactive({¶  foo: 1,¶  bar: 2¶})¶¶const stateAsRefs = toRefs(state)¶¶// 这个 ref 和源属性已经“链接上了”¶state.foo++;¶console.log(stateAsRefs.foo.value); // 2¶¶stateAsRefs.foo.value++;¶console.log(state.foo); // 3¶;toValue::¶toValue(1); //       --> 1¶toValue(ref(1)); //  --> 1¶toValue(() => 1); // --> 1¶;isProxy::¶// 检查一个对象是否是由 reactive()、readonly()、shallowReactive() 或 shallowReadonly() 创建的代理¶const isref = isProxy(test);¶;isReactive::¶// 检查一个对象是否是由 reactive() 或 shallowReactive() 创建的代理¶const isreactive = isReactive(test);¶;isReadonly::¶// 检查传入的值是否为只读对象。只读对象的属性可以更改，但他们不能通过传入的对象直接赋值¶const isreactive = isReadonly(test);¶;shallowRef::¶// ref() 的浅层作用形式¶const state = shallowRef({ count: 1 });¶¶// 不会触发更改¶state.value.count = 2;¶¶// 会触发更改¶state.value = { count: 2 };¶;triggerRef::¶// 强制触发依赖于一个浅层 ref 的副作用，这通常在对浅引用的内部值进行深度变更后使用¶const shallow = shallowRef({¶  greet: 'Hello, world'¶});¶¶// 触发该副作用第一次应该会打印 "Hello, world"¶watchEffect(() => {¶  console.log(shallow.value.greet);¶});¶¶// 这次变更不应触发副作用，因为这个 ref 是浅层的¶shallow.value.greet = 'Hello, universe';¶¶// 打印 "Hello, universe"¶triggerRef(shallow);¶;customRef::¶import { customRef } from 'vue';¶¶export function useDebouncedRef(value, delay = 200) {¶  let timeout;¶  return customRef((track, trigger) => {¶    return {¶      get() {¶        track();¶        return value;¶      },¶      set(newValue) {¶        clearTimeout(timeout)¶        timeout = setTimeout(() => {¶          value = newValue;¶          trigger();¶        }, delay)¶      }¶    }¶  })¶}¶// 使用示例¶// <script setup>¶// 	import { useDebouncedRef } from './debouncedRef'¶// 	const text = useDebouncedRef('hello')¶// </script>¶¶// template>¶// 	<input v-model="text" />¶// </template>¶;shallowReactive::¶// 一个浅层响应式对象里只有根级别的属性是响应式的¶const state = shallowReactive({¶  foo: 1,¶  nested: {¶    bar: 2¶  }¶});¶¶// 更改状态自身的属性是响应式的¶state.foo++;¶¶// ...但下层嵌套对象不会被转为响应式¶isReactive(state.nested); // false¶¶// 不是响应式的¶state.nested.bar++;¶;shallowReadonly::¶// 只有根层级的属性变为了只读¶const state = shallowReadonly({¶  foo: 1,¶  nested: {¶    bar: 2¶  }¶});¶¶// 更改状态自身的属性会失败¶state.foo++;¶¶// ...但可以更改下层嵌套对象¶isReadonly(state.nested); // false¶¶// 这是可以通过的¶state.nested.bar++;¶;toRaw::¶// Vue 创建的代理返回其原始对象¶const foo = {};¶const reactiveFoo = reactive(foo);¶console.log(toRaw(reactiveFoo) === foo); // true¶;markRaw::¶// 将一个对象标记为不可被转为代理。返回该对象本身¶const foo = markRaw({});¶console.log(isReactive(reactive(foo))); // false¶¶// 也适用于嵌套在其他响应性对象¶const bar = reactive({ foo });¶console.log(isReactive(bar.foo)); // false•0•0•0•0•0•1•0••vue常用hooks•Send•0•0•1
1•vprops•选项式props::¶props: {¶	// 类型检查¶	height: Number,¶	// 类型检查 + 其他验证¶	age: {¶	  type: Number,¶	  default: 0,¶	  required: true,¶	  validator: (value) => {¶		return value >= 0¶	  }¶	},¶	config: {¶	  type: Object,¶	  default() {¶		return null;¶	  }¶	}¶}¶;defineProps组合式::¶const props = defineProps({¶	// 类型检查¶	height: Number,¶	// 类型检查 + 其他验证¶	age: {¶	  type: Number,¶	  default: 0,¶	  required: true,¶	  validator: (value) => {¶		return value >= 0¶	  }¶	},¶	config: {¶	  type: Object,¶	  default() {¶		return null;¶	  }¶	}¶})¶;props项基本类型::¶age: {¶  type: Number,¶  default: 0,¶  required: true,¶  validator: (value) => {¶	return value >= 0¶  }¶}¶;props项引用类型::¶config: {¶  type: Object,¶  default() {¶	return [];¶  },¶  required: true,¶  validator: (value) => {¶	return value.id¶  }¶}•0•0•0•0•0•1•0••vue组件属性设置•Send•0•0•1
1•vemit•defineEmits组合式::¶const emit = defineEmits({¶  // 没有校验¶  click: null,¶¶  // 校验 submit 事件¶  submit: ({ email, password }) => {¶    if (email && password) {¶      return true;¶    } else {¶      console.warn('Invalid submit event payload!')¶      return false;¶    }¶  }¶});¶function submitForm(email, password) {¶  emit('submit', { email, password });¶}¶;setup选项简单版::¶emits: ['click', 'submit'],¶;setup选项配置版::¶emits: {¶	// 没有校验¶  click: null,¶¶  // 校验 submit 事件¶  submit: ({ email, password }) => {¶    if (email && password) {¶      return true;¶    } else {¶      console.warn('Invalid submit event payload!')¶      return false;¶    }¶  }¶},¶setup(props, ctx) {¶	ctx.emit('submit')¶}•0•0•0•0•0•1•0••vue事件•Send•0•0•1
1•vstyle•:style="%SELECT_style▬vuestyle▬3▬{ fontSize: fontSize + 'px' }↓styleObject↓[baseStylesObj, overridingStylesObj]▬▬▬0▬▬1%"•0•0•0•0•0•1•0••vue样式绑定•Send•0•0•1
1•vclass•:class="%SELECT_class▬vueclass▬2▬{ active: isActive }↓[isActive ? activeClass : '', errorClass]↓[{ [activeClass]: isActive }, errorClass]▬▬▬0▬▬1%"•0•0•0•0•0•1•0••vue class绑定•Send•0•0•1
1•vfor•vforarray::v-for="(item, index) in list" :key="index"¶;vforobject::v-for="(item, key, index) in obj" :key="index"•0•0•0•0•0•1•0••vue for渲染•Send•0•0•1
∟
Default|Wordlists
‼
0••English Common Words•Wordlist File•%dir%\English Common Words.txt•0
0••Learned•Wordlist File•%dir%\Learned.txt•0
1•Notepad•Notepad•Run•Notepad•0
1•Google•http://www.google.com•Run•http://www.google.com•0
0•Signature•My FirstName LastName Street City, State, Zip Emai•Send•My FirstName LastName¶Street¶City, State, Zip¶Email Address¶Phone¶Cell Phone•0
0•Recent•Recent Files/Folders Menu•Command•fd=%A_AppData%\Microsoft\Windows\Recent¶Menu, RM, UseErrorLevel¶Menu, RM, DeleteAll¶Menu, RM, Delete¶FileList =¶Loop, %fd%\*.*, 0, 0¶    FileList = %FileList%%A_LoopFileTimeModified%`t%A_LoopFileFullPath%`n¶Sort, FileList, R¶Loop, parse, FileList, `n¶{¶   if (A_index=16)¶      break¶   if A_LoopField =¶      continue¶   StringSplit, FileItem, A_LoopField, %A_Tab%¶   OutTarget= %FileItem2%¶   Splitpath, OutTarget,name,,Ext¶   FileGetShortcut, %OutTarget%, FileTo¶   FileGetAttrib, Attributes, %FileTo%¶   SplitPath, FileTo,name,,Ext¶   If InStr(Attributes, "D" )¶   {¶      IconFile:="C:\Windows\system32\imageres.dll"¶      icc:=4¶   }¶   else¶   {¶      IconFile:=AssocQueryApp(Ext)¶      icc:=2¶   }¶   Menu, RM, Add, %name%, LabelR¶   Menu, RM, Icon, %name%, %IconFile%, %icc%, 16¶   if errorlevel¶      Menu, RM, Icon, %name%, %IconFile%, 1, 16¶   if errorlevel¶      Menu, RM, Icon, %name%, C:\Windows\system32\imageres.dll, 12, 16¶}¶Menu, RM, show¶Return¶¶LabelR:¶run, %fd%\%A_ThisMenuItem%.lnk,,useerrorlevel¶return¶¶AssocQueryApp(ext) {¶	RegRead, type, HKCU, Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.%Ext%, Application¶	If !ErrorLevel {¶		RegRead, act, HKCU, Software\Classes\Applications\%type%\shell¶		If ErrorLevel¶			act = open¶		RegRead, cmd, HKCU, Software\Classes\Applications\%type%\shell\%act%\command¶    }¶	Else {¶		RegRead, type, HKCR, .%Ext%¶		RegRead, act , HKCR, %type%\shell¶		If ErrorLevel¶			act = open¶        RegRead, cmd , HKCR, %type%\shell\%act%\command¶        EXEPosition := InStr(cmd,".exe",false,0,1)¶        exepath := Trim(SubStr(cmd,1,EXEPosition+3),"""")¶    }¶    Return, exepath¶}•0
0•Calculator•Advanced Calculator.ahk•Run•%dir%\Advanced Calculator.ahk•0
→
0••My Phrases•Wordlist File•%dir%\My Phrases.txt•0
0••Common Business E-mail Phrases•Wordlist File•%dir%\Common Business E-mail Phrases.txt•0
0••Medical Terms•Wordlist File•%dir%\Medical Terms.txt•0
0••Drug Names•Wordlist File•%dir%\Drug Names.txt•0
0••German Common Words•Wordlist File•%dir%\German Common Words.txt•0
0••French Common Words•Wordlist File•%dir%\French Common Words.txt•0
0••Spanish Common Words•Wordlist File•%dir%\Spanish Common Words.txt•0
∟
Default|Browsers|Media
‼
1•D•Minimize Active Window•Command•WinGet, Sty, Style, A¶if (Sty & 0x20000)¶  WInMinimize, A••0
1•U•Boss Key Simple•Command•Send {Volume_Down 100}¶Send {Media_Play_Pause}¶tmm:=A_TitleMatchMode¶SetTitleMatchMode, 2¶WinMinimize, A¶WinActivate, Outlook¶SetTitleMatchMode, %tmm%••0
1•R_L•Mute/Unmute the Master Volume•Send•{Volume_Mute}••0
1•L_U•Go One Level Up in Explorer•Command•Send !{Up}••0
1•U_D_U•Notepad•Run•notepad••0
1•L_D_R•Calculator•Run•calc••0
1•U_D_U_D•Google Mail•Run•http://mail.google.com••0
1•D_U_D_U•Microsoft Word•Run•winword••0
1•U_R_D_L•Microsoft PowerPoint•Run•powerpnt••0
1•R_L_R_L•Countdown Timer Big•Command•if WinExist("MyCountdown") {¶ Gui, 19:Destroy¶ SetTimer, ShowTimerCD, Off¶}¶else {¶¶InputBox, secsLeft , Countdown, Countdown Seconds:,,160,123,,,,15¶If ErrorLevel¶ Return¶Gui 19:+LastFound +AlwaysOnTop -Caption +ToolWindow¶Gui 19:Color, EEAA99¶Gui 19:Font, s228¶Gui 19:Margin, 0, 0¶Gui 19:Add, Text, w335 h290 yp-50 Vdisp Cred Right¶WinSet TransColor, EEAA99¶Gui 19:Show, NoActivate, MyCountdown¶¶SetTimer, ShowTimerCD, 1000¶Gosub ShowTimerCD¶Return¶}¶¶ShowTimerCD:¶secsLeft--¶IfEqual, secsLeft, 0¶{¶  Loop 4¶  {¶  GuiControl, 19:Text, disp, 0¶  Sleep 400  ¶  GuiControl, 19:Text, disp,¶  Sleep 400¶  }¶  SetTimer ShowTimerCD, Off¶  ;Sleep 3000¶  Gui, 19:Destroy¶}¶Else¶  GuiControl, 19:Text, disp, %secsLeft%¶Return••0
→
1•L•Browser back•Send•{Browser_Back}•Firefox, Chrome, Explorer•0
1•R•Browser forward•Send•{Browser_Forward}•Firefox, Chrome, Explorer•0
1•L_D•Browser favorites•Send•{Browser_Favorites}•Firefox, Chrome, Explorer•0
1•L_R•Browser refresh•Send•{Browser_Refresh}•Firefox, Chrome, Explorer•0
1•D_U_R_D•Browser home page•Send•{Browser_Home}•Firefox, Chrome, Explorer•0
1•U_D_U•Browser New Tab•Send•^t•Firefox, Chrome, Explorer•0
→
1•U_R•Select next track in media player•Send•{Media_Next}••0
1•U_L•Select previous track in media player•Send•{Media_Prev}••0
1•U_D•Play/pause media player•Send•{Media_Play_Pause}••0
1•U_L_R•Stop media player•Send•{Media_Stop}••0
∟
